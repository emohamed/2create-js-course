AJAX
 - Asynchronous Javascript and XML (не е задължително да се ползва XML, но термина е звучен и продължава да се ползва с X на края)
 - Предоставя възможност да се изпращат данни към server-а и да се взима информация от server-а чрез javascript код без да се презарежда страницата
 - Предоставя възможност страницата да дава усещането на desktop програма, защото не е необходимо да се презарежда страницата за всяко ново парче информация

Синхронен модел
 - Нова заявка към server-а се прави при напускане на страницата
 - ajax-sync-communication.png

Асинхронен модел
 - Нова заявка към server-а се прави чрез javascript, без текущата страница да се напуска
 - ajax-async-communication.png
 - AJAX заявките са стандартни HTTP заявки, които не са по-специални от синхронните заявки

Какво точно се случва
 - AJAX заявките имат нужда от определено време за да бъдат изпълнени(за да може да се осъществи мрежовата връзка със server-а, той да генерира отговор и т.н.). 
 - В този период от време browser-а не блокира изпълнението на друг javascript код
 - В момента на приключване на заяквата се извиква callback функция, която слуша за успешното завършване на request-а, или такава за неуспешното му завършване

jQuery API
 - <code>$.ajax</code>
 - short hand methods: $.get(), $.getJSON(), $.getScript(), $.post(), .load()
 - <code>.serializeArray()</code>

$.ajax()
 - прави асинхронна HTTP(AJAX) заявка
{{{
var request = $.ajax({
    url: "file.html"
});
request.done(function (response) {
    console.log(response);
});
request.fail(function (jqXHR, test_status, error_thrown) {
    console.log("Failed due " + error_thrown + "(" + test_status + ")");
});
}}}
 - Единствения задължителен option е <code>url</code>

Важни AJAX options
 - url - адрес, към който да се направи AJAX заявката
 - type - HTTP метод, който да се използва за заявката. Ако заявката променя състоянието на server-а, трябв да ползвате POST, иначе GET
 - data - данни, които да се изпратят към server-а(като GET или POST аргументи)
 - dataType - тип на данните, които се очаква server-а да върне. Може да е xml, HTML, json, jsonp, script, text
Останалите: http://api.jquery.com/jQuery.ajax/

Проблеми с AJAX 
 - google bot не изпълнява javascript, и не може да индексира съдържание, което е скрито зад AJAX заявка
 - тъй като съдържанието, което е достъпно през AJAX променя страницата, то URL адреса на страницата вече не може да се ползва като уникален идентификатор. Това води два проблема: не може да се bookmark-ва такава страница, и не може да се вземе линк към конкретно този ресурс
 - достъпността на страницата най често страда: хора със гласови browser-и
 - тези проблеми имат решения, но трябва да сте наясно с тях. 

Примери:
 - auto complete с HTML
 - auto complete с json
 - презареждане на определен блок от страницата от server-а
 - изпращане на форма с ajax
 - pagination
 - pagination with deep linking 